model ""
	uses "mmxprs"; !gain access to the Xpress-Optimizer solver
	
	declarations
		n: integer
	 	m: integer
	end-declarations

	initializations from "tema-2-p5-a.dat"
		n
		m
	end-initializations
	
	declarations
		
		servicios = 1..n
		demandas = 1..m
		
		d:array(demandas, servicios) of integer
		h:array(demandas) of integer
		
		d_promedio:real
		
		w:mpvar
		
		x:array(servicios) of mpvar 
		y:array(demandas, servicios) of mpvar
		 
	end-declarations
	
	forall(j in servicios)
		x(j)is_binary
	
	forall(i in demandas)
		forall(j in servicios)
			y(i, j)is_binary
			
	initializations from "tema-2-p5-a.dat"
		h
		d
	end-initializations
			
			
	z := w
	
	
	forall(i in demandas)
		rescub(i):= sum(j in servicios)
			y(i,j) = 1
			
	
	forall(i in demandas)
		res1(i) := w >= sum(j in servicios) d(i,j) * y(i,j)
	
			
	forall(i in demandas)
		forall(j in servicios)
			res2(i, j):= y(i,j) <= x(j)
	
	!exportprob(EP_MIN,"",dem_cub)
	
	forall(p in servicios) do
		
		rest := sum(j in servicios) 
			x(j) = p
			
		minimize(z)
			 		
		d_promedio := 1 / m * sum(i in demandas)
				 				sum(j in servicios) 
				 					d(i,j) * y(i,j).sol
				
		writeln("p = ", p)
		writeln("d_max = ", getobjval)
		writeln("d_promedio = ", d_promedio)
		write("x_abiertos = { ")
		forall(j in servicios | x(j).sol = 1)
			write(j, " ")
		writeln("}\n")
	end-do
	
end-model