model ""
	uses "mmxprs";
	setparam("XPRS_MAXTIME", 60)

	declarations
		file_name 	= "example10.dat"
		task:		integer
	end-declarations

	initializations from file_name
		task
	end-initializations

	declarations
		tasks 		= 1..task
		p:			array(tasks) of real
		d:			array(tasks) of real
		w:			array(tasks) of real
		r:			array(tasks) of real
		
		x:			array(tasks) of mpvar
		y:			array(tasks, tasks) of mpvar
		s:			array(tasks) of mpvar
		t:			array(tasks) of mpvar
	end-declarations

	initializations from file_name
		p
		d
		w
	end-initializations
	
	forall(i,j in tasks) y(i,j) is_binary

	
	forall(j in tasks) do
		res_0(j) := x(j) >= r(j)
		res_1(j) := x(j) + p(j) +s(j) - t(j)
	end-do
	
	forall(i,j in tasks | i < j) do
		res_2(i,j) := x(i) + p(i) - x(j) <= MAX_INT * (1 - y(i,j))
		res_3(i,j) := x(j) + p(j) - x(i) <= MAX_INT * y(i,j)
	end-do

	obj := sum(j in tasks)
		w(j) * t(j)
	minimize(obj)
	
	writeln(getobjval)
	forall(j in tasks) do
		writeln("x(",j,") = ",x(j).sol, "\ts(",j,") = ",s(j).sol,"\tt(",j,") = ",t(j).sol)
	end-do
end-model
