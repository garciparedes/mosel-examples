model "Actividades-recursos"
	uses "mmxprs"
	uses "mmsystem"
	declarations
		n: 			integer
	 	m: 			integer
	 	k_max:		integer
	 	dc_min:		integer
	 	dc_max:		integer
	 	N_max:		integer
	end-declarations

	initializations from "aint1.dat"
		n
		m
		k_max
		dc_min
		dc_max
		N_max
	end-initializations
	
	declarations
		servicios	= 1..n
		demandas 	= 1..m
		dc_iter		= dc_min..dc_max
		dist:		array(demandas,servicios) of integer
		
		d:			array(servicios) of integer 
		d_marca:	array(servicios) of integer
		
		cubierta,w: array(demandas) of integer
		solu,fijada:array(servicios) of integer
		a:			array(demandas,servicios) of integer
		
		
		k_iter      = 1..k_max
		k_win: 		integer
		k_list:		array(k_iter) of integer
		N_iter		= 1..N_max
		
		old_solu:	array(servicios) of integer	
		
		x:			array(servicios)of mpvar
	end-declarations

		
	ganancia:=sum(j in servicios)
		x(j)
			
	forall(j in servicios)
		x(j) is_binary
		
	
	initializations from "aint1.dat"
		dist
	end-initializations
	
	forall(dc in dc_iter) do
	
		writeln("dc = ", dc)
		
		forall(i in demandas, j in servicios) do
			if(dist(i,j) <= dc) then a(i,j):=1
			else a(i,j) := 0
			end-if
		end-do
		
		
		!Greedy
		!########################################################################################
		nfilcub := 0
		while(nfilcub < m) do
		
			forall(j in servicios | fijada(j) = 0) do
				d(j) := 0
				forall(i in demandas) do
					if(cubierta(i) = 0 and a(i,j) = 1) then
						d(j) := d(j) + 1
					end-if
				end-do
				
				if(d(j) = 0) then
					fijada(j):= 1
					solu(j) := 0
				end-if
	
			end-do
			
			aux := -99
			forall(j in servicios | fijada(j) = 0) do
				if(d(j) > aux) then
					aux := d(j)
					jmax := j
				end-if
			end-do
			solu(jmax) := 1
			fijada(jmax) := 1
			
			forall(i in demandas) do
				if(cubierta(i) = 0 and a(i, jmax) = 1) then
					cubierta(i) := 1
					nfilcub := nfilcub +1
				end-if
			end-do
			
			! ELIMINACION DE COLUMNAS COMPLETADAS
			forall(i in demandas) do
				w(i):=0
				forall(j in servicios) do
					if(solu(j)=1 and a(i,j)=1)then 
						w(i):=w(i)+1
					end-if
				end-do
			end-do
			forall(k in servicios | solu(k)=1) do
				elimin:= 1
				forall(i in demandas) do
					if(w(i) <1+a(i,k))then
						elimin :=0
					end-if
				end-do
				if(elimin=1) then 
					solu(k) :=0
					forall(i in demandas)w(i):=w(i)-a(i,k)
				end-if
			end-do
		end-do
		
		writeln("\tgreedy solution: ")
		writeln("\tinstalations: ", sum(j in servicios) solu(j))
		write("\topened: ")
		forall(j in servicios | solu(j) = 1) write(j," ")
		writeln("\n")
	
		
		!Greedy Random
		!########################################################################################
		!Seleccion random
		!writeln(ceil(random*k_max))
		forall(j in servicios) do
			old_solu(j):=1
		end-do
		
		forall(n_i in N_iter) do
		
			forall(i in demandas) do
				cubierta(i) := 0
				w(i) := 0
			end-do
			forall(j in servicios) do
				d(j) := 0
				d_marca(j):=0
				fijada(j):=0
				solu(j):=0
			end-do
		
			nfilcub := 0
			while(nfilcub < m) do
			
				forall(j in servicios | fijada(j) = 0) do
					d(j) := 0
					forall(i in demandas) do
						if(cubierta(i) = 0 and a(i,j) = 1) then
							d(j) := d(j) + 1
						end-if
					end-do
					
					if(d(j) = 0) then
						fijada(j):= 1
						solu(j) := 0
					end-if
		
				end-do
				
				!Random Selection
				
				forall(j in servicios) d_marca(j):=0
				forall(k in k_iter) do
					aux := -99
					forall(j in servicios | (fijada(j) = 0 and d_marca(j) = 0)) do
						if(d(j) > aux) then
							aux := d(j)
							jmax := j
						end-if
					end-do
					d_marca(jmax):=1
					k_list(k):=jmax
				end-do
				
				
				k_win := ceil(random*k_max)
				solu(k_list(k_win)) := 1
				fijada(k_list(k_win)) := 1
				
				
				forall(i in demandas) do
					if(cubierta(i) = 0 and a(i, k_list(k_win)) = 1) then
						cubierta(i) := 1
						nfilcub := nfilcub +1
					end-if
				end-do
				
				! ELIMINACION DE COLUMNAS COMPLETADAS
				forall(i in demandas) do
					w(i):=0
					forall(j in servicios) do
						if(solu(j)=1 and a(i,j)=1)then 
							w(i):=w(i)+1
						end-if
					end-do
				end-do
				forall(k in servicios | solu(k)=1) do
					elimin:= 1
					forall(i in demandas) do
						if(w(i) <1+a(i,k))then
							elimin :=0
						end-if
					end-do
					if(elimin=1) then 
						solu(k) :=0
						forall(i in demandas)w(i):=w(i)-a(i,k)
					end-if
				end-do
			end-do
			
			 if(sum(j in servicios) solu(j) < sum(j in servicios) old_solu(j)) then
				forall(j in servicios) do
			 		old_solu(j) := solu(j)
				end-do
			 end-if
		end-do
		
		forall(j in servicios) do
			solu(j) := old_solu(j)
		end-do
		writeln("\tgreedy random solution: ")
		writeln("\tinstalations: ", sum(j in servicios) solu(j))
		write("\topened: ")
		forall(j in servicios | solu(j) = 1) write(j," ")
		writeln("\n")
		
		forall(i in demandas) do
				cubierta(i) := 0
				w(i) := 0
		end-do
		forall(j in servicios) do
			d(j) := 0
			d_marca(j):=0
			fijada(j):=0
			solu(j):=0
		end-do
		
		! Xpress
		!########################################################################################
		
		
		forall(i in demandas)
			rec(i):= sum(j in servicios | a(i,j) = 1) 
				x(j) >= 1
		
		minimize(ganancia)
		
		writeln("\txpress solution: ")
		writeln("\tinstalations: ", getobjval)
		write("\topened: ")
		forall(j in servicios | x(j).sol = 1) write(j," ")
		writeln("\n")
	end-do
end-model