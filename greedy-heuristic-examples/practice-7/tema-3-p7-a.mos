model ""
	uses "mmxprs"; !gain access to the Xpress-Optimizer solver

	declarations
		p_init: integer
		p_max: integer
		n: integer
	 	m: integer
	 	dc: integer
	end-declarations

	initializations from "aint1.dat"
		p_init
		p_max
		n
		m
		dc
	end-initializations

	declarations
		p_range 		= p_init..p_max
			
		servicios 		= 1..n
		demandas 		= 1..m

		d:				array(demandas, servicios) of integer
		h:				array(demandas) of integer

		!Greedy Vars
		cubierta: 		array(demandas) of integer
		solu:			array(servicios) of integer
		partial_sums:	array(servicios) of integer
		
		
		!Xpress Vars
		x:				array(servicios) of mpvar
		z:				array(demandas) of mpvar
		
	end-declarations


	initializations from "aint1.dat"
		h
		d
	end-initializations
	
	h_total:=sum(i in demandas) h(i)


	!Xpress Solution Constant Restrictions
	!################################################################

	dem_cub:=sum(i in demandas)
		h(i) * z(i)
	
	forall(i in demandas)
		rescub(i):= sum(j in servicios | d(i,j) <= dc)
			x(j) >= z(i)
	
	
	forall(j in servicios)
		x(j)is_binary

	forall(i in demandas)
		z(i)is_binary
		
		
	!Solving
	!################################################################
	
	forall(p in p_range)do
		writeln("p = ", p)
		
		! Greedy Solution
		!############################################################
		
		nfilcub := 0
		while(nfilcub < p) do
			forall(j in servicios | solu(j) = 0) do
				partial_sums(j):= sum(i in demandas | d(i,j) <= dc and cubierta(i) = 0) h(i)
			end-do
			
			aux:=-999
			selected:=-1
			forall(j in servicios | solu(j) = 0) do
				if(aux < partial_sums(j)) then
					aux := partial_sums(j)
					selected := j
				end-if
			end-do
			
			solu(selected) := 1
			forall(i in demandas | d(i,selected) <= dc)
					cubierta(i):=1
					
			nfilcub := nfilcub + 1
		end-do
		
		writeln("\tgreedy solution: ")
		
		percent := 100 * sum(i in demandas|cubierta(i) = 1) h(i) / h_total
		writeln("\tpercent: ", percent, " %")
		write("\topened: ")
		forall(j in servicios | solu(j) = 1) 
			write(j,"  ")
		writeln("\n")
		
		forall(i in demandas) do
			cubierta(i) := 0
		end-do
		forall(j in servicios) do
			solu(j):=0
		end-do
		
		
		
		! Random Greedy Solution
		!############################################################
		
		
		
		! Xpress Solution
		!############################################################
		
		rest:= sum(j in servicios) 
			x(j) = p
			
		maximize(dem_cub)
		writeln("\txpress solution: ")
		percent := 100 * getobjval / h_total
		writeln("\tpercent: ", percent, " %")
		write("\topened: ")
		forall(j in servicios | x(j).sol = 1)
			write(j, "  ")
		writeln("\n")
		
	end-do
end-model
