!@encoding CP1252
model ModelName
    uses "mmxprs"; 
    declarations
     n: integer
    end-declarations
    
    
    initializations from "interval_10.dat"
    	n
    end-initializations
    
    declarations
    	tasks = 1..n
    	data: array(tasks, 1..3) of integer
    	
    	x: array(tasks) of mpvar
    end-declarations
    
    initializations from "interval_10.dat"
    	data
    end-initializations
    
    writeln("Exact")
    writeln
    
    forall(t in tasks) do
    	x(t) is_binary
    end-do
    
    obj := sum(t in tasks) x(t)
    
    forall(t1 in tasks, t2 in tasks | t1 <> t2 and (data(t1, 2) <= data(t2, 3) and data(t2, 3) <= data(t1, 3) or 
                                        data(t1, 2) <= data(t2, 2) and data(t2, 2) <= data(t1, 3) )) do
    		res(t1, t2) := x(t1) + x(t2) <= 1
    end-do
    
    
    maximize(obj)
    
    writeln("obj:")
    writeln(getobjval)
    
    writeln
    writeln("i\ts(i)\tf(i)")
    forall(t in tasks | getsol(x(t)) > 0)  do
    	writeln(data(t, 1), "\t", data(t, 2), "\t", data(t, 3))
    end-do
    
    writeln
    writeln("sequence: ")
    min_value := 0
    forall(t1 in tasks | getsol(x(t1)) > 0)  do
    	ii := 1
    	max_value := MAX_INT
        forall(t2 in tasks | getsol(x(t2)) > 0 and 
                            min_value < data(t2, 2) and 
                            data(t2, 2) < max_value )  do   
                ii := t2
                max_value := data(t2, 2)
        end-do
        min_value := max_value
        write(ii, " ")
    end-do
    writeln
    
    writeln
    writeln
    writeln("Greedy")
    writeln
    
    declarations
    	x_greedy: array(tasks) of integer
    end-declarations
    
    ii := 1
    min_value := 0
    forall(t1 in tasks | ii <> 0 and x_greedy(t1) = 0)  do
    	ii := 0
    	max_value := MAX_INT
        forall(t2 in tasks | x_greedy(t2) = 0 and 
                             min_value < data(t2, 2) and 
                             data(t2, 3) < max_value)  do   
                ii := t2
                max_value := data(t2, 3)
        end-do
        if (ii <> 0) then 
            x_greedy(ii) := 1
            min_value := data(ii, 3)
        end-if
    end-do
    
    
    writeln("obj:")
    writeln(sum(t in tasks) x_greedy(t))
    
    writeln
    writeln("i\ts(i)\tf(i)")
    forall(t in tasks | x_greedy(t) > 0)  do
    	writeln(data(t, 1), "\t", data(t, 2), "\t", data(t, 3))
    end-do
    
    writeln
    writeln("sequence: ")
    min_value := 0
    forall(t1 in tasks | x_greedy(t1) > 0)  do
    	ii := 1
    	max_value := MAX_INT
        forall(t2 in tasks | x_greedy(t2) > 0 and 
                            min_value < data(t2, 2) and 
                            data(t2, 2) < max_value )  do   
                ii := t2
                max_value := data(t2, 2)
        end-do
        min_value := max_value
        write(ii, " ")
    end-do
    writeln

end-model
