
model "exercise-04"
	uses "mmxprs"; 
	
	declarations
		n = 4
		m = 5
		
		origins = 1..n
		destinations = 1..m
		
		capacity_origin: array(origins) of integer
		capacity_transport: array(origins, destinations) of integer
		
		cost_origin: array(origins) of integer
		cost_transport: array(origins, destinations) of integer
		
		demands: array(destinations) of integer
		
		x: array(origins, destinations) of mpvar
		
	end-declarations
	
	capacity_origin::[4000,	4500, 2700, 3000]
	
	capacity_transport::[0, 2000, 2000, 2000, 5000,
						 3000,2000, 1000, 200, 0,
					     1000, 2000, 1000, 1000, 300,
					     0, 100, 1000, 1000, 2000]
	
	cost_origin::[2100, 2000, 1600, 1700]
	
	cost_transport::[800, 600, 300, 200, 400,
					 200, 400, 500, 900, 0,
				     500, 200, 200, 200, 400,
					 0, 400, 400, 300, 100]
	
	demands::[2840, 2800, 2600, 2820, 2750]
	
					
	
	objetive := sum(i in origins, j in destinations) x(i,j) * (cost_transport(i,j) + cost_origin(i))
	
	forall(i in origins) do
		res1(i) := sum(j in destinations) x(i,j) <= minlist(capacity_origin(i), sum(j in destinations) capacity_transport(i,j))
	end-do
	
	forall(j in destinations) do
		res2(j) := sum(i in origins) x(i,j) >= minlist(demands(j), sum(i in origins) capacity_transport(i,j))
	end-do
	
	minimize(objetive)
	
	writeln("i\tj\tx\tcr")
	forall(i in origins, j in destinations)
		writeln(i, "\t", j, "\t", getsol(x(i, j)), "\t", x(i, j).rcost)
	writeln
end-model
